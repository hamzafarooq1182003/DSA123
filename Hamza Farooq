#include <iostream>
#include <algorithm>
using namespace std;

class Node {
public:
    int key;
    Node *left, *right;
    int height;

    Node(int k) {
        key = k;
        left = right = nullptr;
        height = 1;
    }
};

class AVLTree {
private:
    Node* insert(Node* node, int key);
    Node* deleteNode(Node* root, int key);
    Node* minValueNode(Node* node);
    Node* rightRotate(Node* y);
    Node* leftRotate(Node* x);
    int getBalance(Node* N);
    int height(Node* N);

public:
    Node* root;

    AVLTree() {
        root = nullptr;
    }

    void insert(int key) {
        root = insert(root, key);
    }

    void deleteNode(int key) {
        root = deleteNode(root, key);
    }

    bool search(Node* root, int key);
    void inOrder(Node* root);
    void preOrder(Node* root);
    void postOrder(Node* root);
};
